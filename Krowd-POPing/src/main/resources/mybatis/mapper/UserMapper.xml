<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jellybears.krowdpoping.user.model.dao.UserMapper">
    <resultMap id="UserResultMap" type="com.jellybears.krowdpoping.user.model.dto.UserDTO" >
        <id property="user_code" column="user_code"/>
        <result property="userId" column="id"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="nickname" column="nickname"/>
        <result property="birthday" column="birthday"/>
        <result property="email" column="email"/>
        <result property="phone_number" column="phone_number"/>
        <result property="user_status" column="user_status"/>
        <result property="email_code" column="email_code"/>

    </resultMap>
    <resultMap id="RoleResultMap" type="com.jellybears.krowdpoping.user.model.dto.RoleDTO">
        <id property="role_code" column="role_code"/>
        <result property="role_name" column="role_name"/>
    </resultMap>

    <resultMap id="RoleTypeResultMap" type="com.jellybears.krowdpoping.user.model.dto.RoleTypeDTO">
        <association property="userDTO" resultMap="UserResultMap"/>
        <association property="roleDTO" resultMap="RoleResultMap"/>
    </resultMap>

    <resultMap id="EmailReusltMap" type="com.jellybears.krowdpoping.user.model.dto.EmailDTO">
        <id property="email_code" column="email_code"/>
        <result property="email_certificate" column="email_certificate"/>
    </resultMap>
    <resultMap id="EmailandUserDTO" type="com.jellybears.krowdpoping.user.model.dto.EmailandUserDTO">
        <association property="emailDTO" resultMap="EmailResultMap"/>
        <association property="userDTO" resultMap="UserResultMap"/>
    </resultMap>

<!--    <select id="selectUserById" resultMap="RoleTypeResultMap">-->
<!--        SELECT-->
<!--            A.ID,-->
<!--            A.USER_CODE,-->
<!--            C.ROLE_CODE,-->
<!--            B.ROLE_NAME-->
<!--        FROM USER_INFO A-->
<!--                 INNER JOIN ROLE_TYPE C ON A.USER_CODE = C.USER_CODE-->
<!--                 INNER JOIN ROLE B ON C.ROLE_CODE = B.ROLE_CODE-->
<!--&#45;&#45;         WHERE B.ROLE_NAME = 'ROLE_ADMIN'-->
<!--          AND A.ID = #{ userId }-->

<!--    </select>-->

    <select id="selectUserById" resultMap="UserResultMap">
        SELECT
            ID,
            USER_CODE
        FROM USER_INFO

        WHERE ID = #{ userId }

    </select>



    <select id="findByUserId" resultMap="RoleTypeResultMap">
        SELECT
            A.USER_CODE,
            A.ID,
            A.PASSWORD,
            A.NAME,
            A.NICKNAME,
            A.BIRTHDAY,
            A.EMAIL,
            A.PHONE_NUMBER,
            A.USER_STATUS,
            B.ROLE_CODE,
            B.ROLE_NAME
        FROM USER_INFO A
                 INNER JOIN ROLE_TYPE C ON A.USER_CODE = C.USER_CODE
                 INNER JOIN ROLE B ON C.ROLE_CODE = B.ROLE_CODE
        WHERE A.USER_STATUS ='일반'
            OR A.USER_STATUS='경고'
          AND A.ID = #{ userId }
    </select>


    <insert id="insertUser" parameterType="com.jellybears.krowdpoping.user.model.dto.UserDTO">
        INSERT
          INTO USER_INFO        (
                                  ID
                                , PASSWORD
                                , NAME
                                , NICKNAME
                                , BIRTHDAY
                                , EMAIL
                                , PHONE_NUMBER
                                )
        VALUES  (
                  #{ userId }
                , #{ password }
                , #{ name }
                , #{ nickname }
                , #{ birthday }
                , #{ email }
                , #{ phone_number }

                )
    </insert>

    <select id="selectLastInsertUserCode">
        SELECT last_insert_id()

        FROM USER_INFO LIMIT 1
    </select>

    <insert id="insertRoletype" >
        INSERT
          INTO ROLE_TYPE
        VALUES (
                   #{ user_code },
                   2
               )

    </insert>

    <insert id="authNum">
        INSERT
          INTO EMAIL
          (email_code,
           email_certificate)
        VALUES ( null,
                #{ email_certificate }
               )

    </insert>
    <update id="updateEmail_code">
        UPDATE user_info
        SET email_code = (SELECT email_code
                          FROM email
                          WHERE email_certificate = #{ authNum })
        WHERE ID =#{ userId }
    </update>





    <update id="updateUser">
        UPDATE
            USER_INFO A
        SET
             PASSWORD = #{ password }
            ,NICKNAME = #{ nickname }
        WHERE USER_STATUS ='일반'
          AND ID = #{ userId }

    </update>

    <update id="deleteUser">
        UPDATE
            USER_INFO
        SET USER_STATUS='탈퇴'
        WHERE USER_STATUS='일반'
        AND ID = #{ userId }
    </update>







</mapper>













