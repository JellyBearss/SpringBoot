<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jellybears.krowdpoping.projectRegister.section01.model.dao.ProjectRegisterMapper">

    <resultMap id="projectResultMap" type="com.jellybears.krowdpoping.projectRegister.section01.model.dto.ProjectDTO">
        <id property="projectCode" column="PROJECT_CODE"/>
        <result property="title" column="TITLE"/>
        <result property="content" column="CONTENT"/>
        <association property="categoryDTO" resultMap="categoryResultMap" />
    </resultMap>



    <resultMap id="categoryResultMap" type="com.jellybears.krowdpoping.category.model.dto.CategoryDTO">
        <id property="categoryCode" column="CATEGORY_CODE"/>
        <result property="categoryTitle" column="CATEGORY_TITLE"/>
        <result property="subCategoryCode" column="CATEGORY_CODE"/>
        <result property="upperCategoryCode" column="UPPER_CATEGORY_CODE"/>
    </resultMap>


    <resultMap id="planResultMap" type="com.jellybears.krowdpoping.projectRegister.section01.model.dto.PlanDTO">
        <id property="projectCode" column="PROJECT_CODE"/>
        <result property="startDate" column="START_DATE" />
        <result property="endDate" column="END_DATE" />
        <result property="targetAmount" column="TARGET_AMOUNT" />
        <result property="totalAmount" column="TOTAL_AMOUNT" />
    </resultMap>


    <resultMap id="infoResultMap" type="com.jellybears.krowdpoping.projectRegister.section01.model.dto.InfoDTO">
        <id property="projectCode" column="PROJECT_CODE" />
        <result property="planContent" column="PLAN_CONTENT" />
        <result property="budgetContent" column="BUDGET_CONTENT" />
        <result property="infoContent" column="INFO_CONTENT" />
    </resultMap>

    <resultMap id="goodsResultMap" type="com.jellybears.krowdpoping.projectRegister.section01.model.dto.GoodsDTO">
        <id property="goodsCode" column="GOODS_CODE"/>
        <result property="goodsName" column="NAME"/>
        <result property="quantity" column="QUANTITY"/>
        <result property="amount" column="AMOUNT"/>
    </resultMap>

    <resultMap id="itemResultMap" type="com.jellybears.krowdpoping.projectRegister.section01.model.dto.ItemDTO">
        <id property="itemCode" column="ITEM_CODE"/>
        <result property="itemName" column="itemName"/>
        <result property="itemQuantity" column="itemQuantity"/>
    </resultMap>


    <resultMap id="goodsAndItemResultMap" type="com.jellybears.krowdpoping.projectRegister.section01.model.dto.GoodsAndItemDTO">
        <association property="goodsDTO" resultMap="goodsResultMap" />
        <collection property="itemDTO" resultMap="itemResultMap" />
    </resultMap>


    <insert id="insertProjectRegister" parameterType="com.jellybears.krowdpoping.projectRegister.section01.model.dto.ProjectDTO">
        INSERT INTO project(
                            TITLE,
                            CATEGORY_CODE,
                            CONTENT,
                            START_DATE,
                            END_DATE,
                            TARGET_AMOUNT,
                            TOTAL_AMOUNT,
                            FUNDING_STATUS,
                            UPDATE_DATE,
                            PLAN_CONTENT,
                            BUDGET_CONTENT,
                            INFO_CONTENT,
                            USER_CODE,
                            EDIT_STATUS,
                            PRICEPLAN_CODE

        )
        VALUES (
                #{ title },
                #{ categoryDTO.subCategoryCode },
                #{ content },
                NOW(),
                NOW(),
                0,
                0,
                '',
                current_date,
                '',
                '',
                '',
                #{userCode},
                '작성중',
                1
        )

    </insert>


    <select id="getEditProjectCode" resultType="_int">
        SELECT project_code
        FROM project WHERE user_code = #{ userCode } AND edit_status = '작성중'
    </select>


    <select id="getSubCategoryList" resultMap="categoryResultMap">
        SELECT   category_code
             ,category_title
             ,upper_category_code
        FROM category
--             WHERE upper_category_code IS NOT NULL

    </select>


    <update id="UpdateprojectRegister" parameterType="com.jellybears.krowdpoping.projectRegister.section01.model.dto.ProjectDTO">
        UPDATE project
        SET TITLE = #{ title },
            CATEGORY_CODE = #{ categoryDTO.subCategoryCode },
            CONTENT = #{ content }
        WHERE project_code = #{ projectCode }
    </update>

<!--    <update id="updatePriceplanRegister">-->
<!--        UPDATE project-->
<!--        SET priceplan_code = #{ priceplanCode }-->
<!--        WHERE project_code = #{ projectCode }-->
<!--    </update>-->


    <update id="updatePlanRegister" parameterType="com.jellybears.krowdpoping.projectRegister.section01.model.dto.PlanDTO">
        UPDATE project
        SET start_date = #{ startDate },
            end_date = #{ endDate },
            target_amount = #{ targetAmount },
            total_amount = #{ totalAmount }
        WHERE project_code = #{ projectCode }

    </update>

    <update id="updateInfoRegister" parameterType="com.jellybears.krowdpoping.projectRegister.section01.model.dto.InfoDTO">
        UPDATE project
        SET   plan_content = #{ planContent }
            , budget_content = #{ budgetContent }
            , info_content = #{ infoContent }
        WHERE project_code = #{ projectCode }

    </update>


    <insert id="insertGoods" parameterType="com.jellybears.krowdpoping.projectRegister.section01.model.dto.GoodsDTO">
        INSERT INTO goods(
            name,
            quantity,
            project_code,
            amount
        ) VALUES (
                  #{ goodsName },
                  #{ quantity },
                  #{ projectCode },
                  #{ amount }
        )
        <selectKey keyProperty="goodsCode" resultType="_int" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>


    <insert id="insertItem">
        INSERT INTO item(
            name
        ) VALUES(
                #{itemName}
        )
        <selectKey keyProperty="itemCode" resultType="_int" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>


    <insert id="insertItemQuantity">
        INSERT INTO goods_details(
                          item_code,
                          goods_code,
                          item_quantity
            ) VALUES (
                        #{ itemCode },
                      #{ goodsCode },
                      #{ itemQuantity }
                      )

    </insert>


    <select id="selectProjectRegByProjectCode" resultMap="projectResultMap">
        SELECT
            project.project_code
             , project.title
             , project.content
             , category.category_code
             , category.category_title
             , category.upper_category_code
        FROM project
                 JOIN category ON(project.category_code = category.category_code)
        WHERE project_code = #{ projectCode }
    </select>



    <select id="selectPlanRegByProjectCode" resultMap="planResultMap">
        SELECT
            project_code
            , start_date
            , end_date
            , target_amount
            , total_amount
        FROM project
        WHERE project_code = #{ projectCode }
    </select>



<!--    파라미터로 projectCode 하나 전달해서 parametertype 생략-->
    <select id="selectInfoRegByProjectCode" resultMap="infoResultMap">
        SELECT
              project_code
            , plan_content
            , budget_content
            , info_content
        FROM project
        WHERE project_code = #{ projectCode }
    </select>

    <select id="selectGoodsRegByProjectCode" resultMap="goodsAndItemResultMap">
        select
            A.project_code,
            A.goods_code,
            A.name,
            A.quantity,
            A.amount,
            C.name as 'itemName',
            B.item_quantity as 'itemQuantity'

        from goods A
                left join goods_details B on A.goods_code = B.goods_code
                left join item C on B.item_code = C.item_code
        where project_code = #{ projectCode }
    </select>






</mapper>